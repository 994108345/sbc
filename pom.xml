<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.wzl</groupId>
    <artifactId>sbc</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>sbc-common</module>
        <module>sbc-config</module>
        <module>sbc-eureka</module>
        <module>sbc-permission</module>
        <module>sbc-chatboard</module>
        <module>sbc-redis</module>
        <module>sbc-prod</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>

    <dependencies>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <!-- 排除默认日志包 -->
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
                <version>${spring.boot.dependencies}</version>
            </dependency>

            <!--springCloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--springboot-->
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.dependencies}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--eureka-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${spring.cloud.starter.netflix.eureka.server.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.dependencies}</version>
                <scope>test</scope>
            </dependency>

            <!--配置文件处理器-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring.boot.dependencies}</version>
                <optional>true</optional>
            </dependency>

            <!--redis-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-redis</artifactId>
                <version>${spring.boot.starter.redis}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring.boot.dependencies}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.annotations.version}</version>
            </dependency>

            <!--log4j2-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring.boot.starter.log4j2}</version>
            </dependency>

            <!--json转化-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--mysql-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!--durid连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis.spring.version}</version>
            </dependency>
            <!--kafka-->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring.kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>com.netflix.ribbon</groupId>
                <artifactId>ribbon-loadbalancer</artifactId>
                <version>${ribbon.loadbalancer.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
            <!--eureka-client-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix-eureka-client</artifactId>
                <version>${spring.cloud.netflix.eureka.client.version}</version>
                <scope>compile</scope>
            </dependency>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!--oss文件上传-->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-sdk-oss.version}</version>
            </dependency>

            <!--dozer-->
            <dependency>
                <groupId>net.sf.dozer</groupId>
                <artifactId>dozer</artifactId>
                <version>${dozer.version}</version>
            </dependency>

            <!--内部引用-->
            <dependency>
                <groupId>cn.wzl</groupId>
                <artifactId>sbc-permission-interceptor</artifactId>
                <version>${sbc-permission-interceptor.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring.boot.dependencies>2.0.3.RELEASE</spring.boot.dependencies>
        <spring.cloud.starter.netflix.eureka.server.version>2.0.2.RELEASE</spring.cloud.starter.netflix.eureka.server.version>
        <java.version>1.8</java.version>
        <log4j.version>2.11.1</log4j.version>
        <fastjson.version>1.2.38</fastjson.version>
        <druid.version>1.1.9</druid.version>
        <mysql.version>5.1.47</mysql.version>
        <mybatis.spring.version>1.3.2</mybatis.spring.version>
        <spring.cloud.version>Finchley.RELEASE</spring.cloud.version>
        <spring.boot.starter.redis>RELEASE</spring.boot.starter.redis>
        <jackson.annotations.version>2.9.6</jackson.annotations.version>
        <spring.boot.starter.log4j2>2.0.3.RELEASE</spring.boot.starter.log4j2>
        <spring.kafka.version>2.1.7.RELEASE</spring.kafka.version>
        <kafka.version>1.0.1</kafka.version>
        <aliyun-sdk-oss.version>2.8.3</aliyun-sdk-oss.version>

        <spring.cloud.commons.version>2.0.2.RELEASE</spring.cloud.commons.version>
        <commons.lang.version>2.5</commons.lang.version>
        <ribbon.loadbalancer.version>2.3.0</ribbon.loadbalancer.version>
        <spring.web.version>5.1.3.RELEASE</spring.web.version>
        <lombok.version>1.18.2</lombok.version>

        <spring.cloud.netflix.eureka.client.version>2.0.2.RELEASE</spring.cloud.netflix.eureka.client.version>

        <mybatis.version>3.4.6</mybatis.version>
        <mybatis-spring-boot-starter.version>1.3.2</mybatis-spring-boot-starter.version>
        <dozer.version>5.5.1</dozer.version>
        <!--内部引用-->
        <sbc-permission-interceptor.version>1.0-SNAPSHOT</sbc-permission-interceptor.version>
        <!--跳过测试-->
        <skipTests>true</skipTests>
    </properties>

    <profiles>
        <!--<profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profile.name>local</profile.name>
            </properties>
        </profile>-->
        <profile>
            <id>test</id>
            <properties>
                <profile.name>test</profile.name>
            </properties>
        </profile>
    </profiles>

</project>